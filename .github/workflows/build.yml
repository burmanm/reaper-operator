name: Testing and building docker images

on:
  push:
    branches:
      - master

  pull_request:
    branches: [ master ]

jobs:
  testing:
    name: Run tests
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/go
      GOROOT: /usr/local/go1.15
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run unit tests
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          make test
      - name: Create Kind Cluster
        uses: helm/kind-action@v1.1.0
        with:
          version: v0.10.0
          node_image: kindest/node:v1.20.2
          cluster_name: kind
          config: test/config/kind/kind_config_3_workers.yaml
      - name: Run e2e-test
        run: |
          export PATH=$GOROOT/bin:$GOPATH/bin:$PATH
          make e2e-test
  push_docker_image:
    runs-on: ubuntu-latest
    needs: testing
    if: github.ref == 'refs/heads/master'
    name: Build reaper-operator image
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Set git parsed values
        id: vars
        run: |
         echo ::set-output name=sha_short::$(git rev-parse --short=8 ${{ github.sha }})
         echo ::set-output name=tag_name::${GITHUB_REF#refs/tags/}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: k8ssandra/reaper-operator:${{ steps.vars.outputs.sha_short }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
